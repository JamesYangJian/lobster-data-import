name: LobsterDataImport

on:
  push:
    paths:
      - .github/workflows/flat.yaml
  workflow_dispatch:
  schedule:
    - cron: '*/720 * * * *'
    
jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: checkout_repo
        uses: actions/checkout@v2
      - name: fetch_data
        uses: githubocto/flat@v3
        with:
          http_url: https://lobste.rs/newest.json
          downloaded_filename: newest.json
      - name: neo4j_import
        uses: johnymontana/flat-graph@v1.2
        with:
          neo4j-user: ${{secrets.NEO4J_USER}}
          neo4j-password: ${{secrets.NEO4J_PASSWORD}}
          neo4j-uri: ${{secrets.NEO4J_URL}}
          filename: newest.json
          cypher-query: >
            unwind $value as article
            merge (s:User {name:article.submitter_user.username})
                set s.karma=article.submitter_user.karma,
                    s.avatar="https://lobste.rs" + article.submitter_user.avatar_url,
                    s.created_at=DateTime(article.submitter.created_at)
            merge (i:User {name:article.submitter_user.invited_by_user})
            merge (s)-[:INVITED_BY]->(i)
            merge (a:Article {id:article.short_id})
                set a.create_at = DateTime(article.created_at),
                    a.title = article.title,
                    a.url = article.url,
                    a.score = article.score
            merge (a)<-[:SUBMITTED]-(s)
            with a, article
            unwind article.tags as tag
            merge(t:Tag {name:tag})
            merge (a)-[:HAS_TAG]->(t)
